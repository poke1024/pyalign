name: Build

on: [push]

jobs:
  build_wheels:

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.0

      - uses: ilammy/msvc-dev-cmd@v1
        if: startsWith(matrix.os, 'windows')

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT: "PYALIGN_PREBUILT_MARCH='1'"
          CIBW_SKIP: "pp* cp310-* cp311-*"
          CIBW_ARCHS: "auto64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_ALL_LINUX: bash ci/prepare_per_build.sh
          CIBW_BEFORE_ALL_MACOS: bash ci/prepare_per_build.sh
          CIBW_BEFORE_ALL_WINDOWS: C:\msys64\msys2_shell.cmd -mingw64 -defterm -here -full-path -no-start -shell bash ci/prepare_per_build.sh

      - name: store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: setup python
        with:
          python-version: '3.8'

      - name: install dependencies
        run: bash ci/install_sdist_dep.sh

      - name: build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: release package
        if: (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
